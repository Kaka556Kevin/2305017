name: CI-CD Pipeline

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: ghcr.io/kaka556kevin/2305017

jobs:
  build-and-push:
    name: Build & Publish Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: |
          TAG_COMMIT="${{ env.IMAGE_NAME }}:${{ github.sha }}"
          TAG_LATEST="${{ env.IMAGE_NAME }}:latest"
          docker build \
            -t "$TAG_COMMIT" \
            -t "$TAG_LATEST" \
            .

      - name: Push Docker image
        run: |
          TAG_COMMIT="${{ env.IMAGE_NAME }}:${{ github.sha }}"
          TAG_LATEST="${{ env.IMAGE_NAME }}:latest"
          docker push "$TAG_COMMIT"
          docker push "$TAG_LATEST"

  deploy:
    name: Deploy to Production Server
    runs-on: [self-hosted, linux, x64]
    needs: build-and-push

    steps:
      - name: Install SSH client & Netcat
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client netcat-openbsd

      - name: Start SSH agent & add key (manual)
        run: |
          # Start a background ssh-agent
          eval "$(ssh-agent -s)"

          # Write the private key to a temporary file and add it
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key
          ssh-add /tmp/deploy_key

      - name: Wait for SSH to open on port 2222 (up to 50s)
        run: |
          echo "Checking SSH port 2222 on ${{ secrets.SERVER_IP }}..."
          success=1

          for i in {1..5}; do
            if nc -z ${{ secrets.SERVER_IP }} 2222; then
              echo "✅ SSH port 2222 is open!"
              success=0
              break
            else
              echo "⏳ Port 2222 closed (attempt $i/5). Retrying in 10 seconds..."
              sleep 10
            fi
          done

          if [ $success -ne 0 ]; then
            echo "❌ SSH port 2222 still closed after 5 attempts. Aborting."
            exit 1
          fi

      - name: Add server to known_hosts (allow failures)
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p 2222 -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts || true

      - name: Deploy via SSH (port 2222)
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
        run: |
          ssh -vvv \
            -p 2222 \
            -o StrictHostKeyChecking=no \
            -o ConnectTimeout=10 \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} <<EOF
              # Log in on the remote host to GHCR so `docker pull` works
              echo "${{ secrets.GITHUB_TOKEN }}" \
                | docker login ghcr.io \
                  -u ${{ github.actor }} \
                  --password-stdin

              # Pull the newly built image (tagged by commit SHA)
              docker pull "${IMAGE_NAME}:${{ github.sha }}"

              # Stop & remove any old container, then run the new one
              docker rm -f my-app || true
              docker run -d -p 80:80 --name my-app "${IMAGE_NAME}:${{ github.sha }}"
            EOF
